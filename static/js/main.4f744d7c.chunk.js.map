{"version":3,"sources":["components/RandomColor.js","components/RandomOutput.js","components/Control.js","components/Preview.js","components/ResultItems.js","components/Result.js","components/TextInput.js","App.js","index.js"],"names":["RandomColor","props","useState","color","setColor","useEffect","interval","setInterval","randomcolor","clearInterval","onClick","handleClick","id","className","style","backgroundColor","RandomOutput","this","PureComponent","Control","onSubmit","handleSubmit","value","input","fontType","onChange","handleChange","name","fontFamily","map","font","makeClass","toLowerCase","replace","uuidv4","type","min","max","rangeValue","checked","colorProperties","memo","Preview","preview","size","setSize","setFont","textColor","setTextColor","outlineColor","setOutlineColor","setBackgroundColor","fontSize","textShadow","textInput","ResultItems","Result","result","item","TextInput","placeholder","App","state","count","event","target","setState","closest","random","targetId","prev","filter","catArray","chooseRandom","Math","floor","length","randomFont","randomSize","test","preventDefault","handleClear","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f744d7c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport randomcolor from \"randomcolor\";\n\nfunction RandomColor(props) {\n  const [color, setColor] = useState(\"grey\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setColor(randomcolor());\n    }, 700);\n    return () => clearInterval(interval);\n  }, []);\n  return (\n    <div onClick={props.handleClick} id=\"container\" className=\"color-container\">\n      <div id=\"#FF3F00\" className=\"color\">\n        <div className=\"color-red circle\"></div>\n      </div>\n      <div id=\"#FB9300\" className=\"color\">\n        <div className=\"color-orange circle\"></div>\n      </div>\n      <div id=\"#FFE268\" className=\"color\">\n        <div className=\"color-yellow circle\"></div>\n      </div>\n      <div id=\"#81B214\" className=\"color\">\n        <div className=\"color-green circle\"></div>\n      </div>\n      <div id=\"#00C1D4\" className=\"color\">\n        <div className=\"color-blue circle\"></div>\n      </div>\n      <div id=\"#0F044C\" className=\"color\">\n        <div className=\"color-navy circle\"></div>\n      </div>\n      <div id=\"#52006A\" className=\"color\">\n        <div className=\"color-purple circle\"></div>\n      </div>\n      <div id=\"white\" className=\"color\">\n        <div className=\"color-white circle\"></div>\n      </div>\n      <div id=\"black\" className=\"color\">\n        <div className=\"color-black circle\"></div>\n      </div>\n      <div id=\"random\" className=\"color\">\n        <div\n          className=\"color-random circle\"\n          style={{ backgroundColor: color }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default RandomColor;\n","import React, { PureComponent } from \"react\";\n\nclass RandomOutput extends PureComponent {\n  render() {\n    return (\n      <button className=\"btn btn-random\" onClick={this.props.handleClick}>\n        Randomize!\n      </button>\n    );\n  }\n}\n\nexport default RandomOutput;\n","import React, { memo } from \"react\";\nimport RandomColor from \"./RandomColor\";\nimport RandomOutput from \"./RandomOutput\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction Control(props) {\n  return (\n    <div className=\"control-container\">\n      <h1 className=\"title\">TEXT BEAUTIFIER</h1>\n\n      <form className=\"form\" onSubmit={props.handleSubmit}>\n        <div className=\"font-container\">\n          <label>Font Type </label>\n          <select\n            value={props.input.fontType}\n            onChange={props.handleChange}\n            name=\"fontType\"\n          >\n            {props.input.fontFamily.map((font) => {\n              const makeClass = font.toLowerCase().replace(\" \", \"\");\n              return (\n                <option\n                  className={`font-${makeClass}`}\n                  value={font}\n                  key={uuidv4()}\n                >\n                  {font}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <div className=\"slide-container\">\n          <label>Font Size</label>\n          <input\n            type=\"range\"\n            min=\"16\"\n            max=\"50\"\n            onChange={props.handleChange}\n            name=\"rangeValue\"\n            value={props.input.rangeValue}\n            className=\"slider\"\n          />\n        </div>\n\n        <div className=\"radio-container\">\n          <p>Color Options</p>\n          <label className=\"radio\">\n            text color\n            <input\n              type=\"radio\"\n              name=\"colorProperties\"\n              value=\"textColor\"\n              className=\"radio-input\"\n              id=\"textColor\"\n              checked={props.input.colorProperties === \"textColor\"}\n              onChange={props.handleChange}\n            />\n          </label>\n          <label className=\"radio\">\n            outline color\n            <input\n              type=\"radio\"\n              name=\"colorProperties\"\n              value=\"outlineColor\"\n              className=\"radio-input\"\n              checked={props.input.colorProperties === \"outlineColor\"}\n              onChange={props.handleChange}\n            />\n          </label>\n          <label className=\"radio\">\n            background color\n            <input\n              type=\"radio\"\n              name=\"colorProperties\"\n              value=\"backgroundColor\"\n              className=\"radio-input\"\n              checked={props.input.colorProperties === \"backgroundColor\"}\n              onChange={props.handleChange}\n            />\n          </label>\n        </div>\n        <RandomColor handleClick={props.handleClick} />\n\n        <input type=\"submit\" className=\"btn btn-generate\" value=\"Generate!\" />\n        <h3>Or...</h3>\n        <RandomOutput handleClick={props.handleClick} />\n      </form>\n    </div>\n  );\n}\n\nexport default memo(Control);\n","import React, { useState, useEffect } from \"react\";\n// import \"./../sass/main.scss\";\n\nfunction Preview(props) {\n  const [size, setSize] = useState(props.preview.rangeValue);\n  const [font, setFont] = useState(props.preview.fontType);\n  const [textColor, setTextColor] = useState(props.preview.textColor);\n  const [outlineColor, setOutlineColor] = useState(props.preview.outlineColor);\n  const [backgroundColor, setBackgroundColor] = useState(\n    props.preview.backgroundColor\n  );\n\n  useEffect(() => {\n    setSize(+props.preview.rangeValue);\n  }, [props.preview.rangeValue]);\n\n  useEffect(() => {\n    setFont(props.preview.fontType);\n  }, [props.preview.fontType]);\n\n  useEffect(() => {\n    setTextColor(props.preview.textColor);\n  }, [props.preview.textColor]);\n\n  useEffect(() => {\n    setOutlineColor(props.preview.outlineColor);\n  }, [props.preview.outlineColor]);\n\n  useEffect(() => {\n    setBackgroundColor(props.preview.backgroundColor);\n  }, [props.preview.backgroundColor]);\n\n  return (\n    <div className=\"preview-container\">\n      <h2>preview</h2>\n      <div\n        className=\"preview\"\n        style={{\n          fontSize: size,\n          fontFamily: font,\n          color: textColor,\n          textShadow: `-2px -2px 0 ${outlineColor}, 2px -2px 0 ${outlineColor}, -2px 2px 0 ${outlineColor}, 2px 2px 0 ${outlineColor}`,\n          backgroundColor: backgroundColor,\n        }}\n      >\n        {props.preview.textInput}\n      </div>\n    </div>\n  );\n}\n\nexport default Preview;\n","import React from \"react\";\n\nfunction ResultItems(props) {\n  return (\n    <div\n      className=\"result\"\n      id={props.style.id}\n      style={{\n        fontSize: props.style.rangeValue,\n        fontFamily: props.style.fontType,\n        color: props.style.textColor,\n        textShadow: `-2px -2px 0 ${props.style.outlineColor}, 2px -2px 0 ${props.style.outlineColor}, -2px 2px 0 ${props.style.outlineColor}, 2px 2px 0 ${props.style.outlineColor}`,\n        backgroundColor: props.style.backgroundColor,\n      }}\n    >\n      {props.style.textInput}\n      <div className=\"delete\">X</div>\n    </div>\n  );\n}\nexport default ResultItems;\n","import React, { PureComponent } from \"react\";\nimport ResultItems from \"./ResultItems\";\nimport { v4 as uuidv4 } from \"uuid\";\n// import \"./../sass/main.scss\";\n\nclass Result extends PureComponent {\n  render() {\n    const { result } = this.props;\n    return (\n      <div className=\"result-container\">\n        <div\n          className=\"result-container-scroll\"\n          onClick={this.props.handleClick}\n        >\n          {result.map((item) => (\n            <ResultItems style={item} key={uuidv4()} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Result;\n","import React, { PureComponent } from \"react\";\n// import \"./../sass/main.scss\";\n\nclass TextInput extends PureComponent {\n  render() {\n    return (\n      <div className=\"input-container\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={this.props.input}\n          name=\"textInput\"\n          placeholder=\"Type here!\"\n          onChange={this.props.handleChange}\n          onClick={this.props.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TextInput;\n","import React, { Component } from \"react\";\nimport randomcolor from \"randomcolor\";\nimport Control from \"./components/Control\";\nimport Preview from \"./components/Preview\";\nimport Result from \"./components/Result\";\nimport TextInput from \"./components/TextInput\";\n\nclass App extends Component {\n  state = {\n    textInput: \"\",\n    fontType: \"Arial\",\n    rangeValue: 16,\n    textColor: \"black\",\n    outlineColor: \"#ffffff00\",\n    backgroundColor: \"#ffffff\",\n    colorProperties: \"textColor\",\n    fontFamily: [\n      \"Roboto\",\n      \"Lora\",\n      \"Open Sans\",\n      \"Poppins\",\n      \"Sacramento\",\n      \"Ubuntu\",\n      \"Hanalei Fill\",\n      \"Luckiest Guy\",\n      \"Montserrat\",\n      \"Pacifico\",\n    ],\n    count: 0,\n    result: [],\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleClick = (event) => {\n    if (event.target.closest(\".color-container\")) {\n      if (!event.target.closest(\".color\")) return;\n      const id = event.target.closest(\".color\").id;\n      const random = randomcolor();\n      id === \"random\"\n        ? this.setState({ [this.state.colorProperties]: random })\n        : this.setState({ [this.state.colorProperties]: id });\n    } else if (event.target.closest(\".delete\")) {\n      if (!event.target.closest(\".result\")) return;\n      const targetId = event.target.closest(\".result\").id;\n      this.setState((prev) => {\n        return {\n          ...prev,\n          result: prev.result.filter((item) => item.id !== +targetId),\n        };\n      });\n    } else if (event.target.closest(\".btn-random\")) {\n      const catArray = [\"😺\", \"😸\", \"😹\", \"😻\", \"😼\", \"😽\", \"🙀\"];\n      const chooseRandom = Math.floor(Math.random() * catArray.length);\n      const randomFont = Math.floor(Math.random() * 10);\n      const randomSize = 50 - Math.floor(Math.random() * 35);\n      const text = (prev) => {\n        return this.state.textInput === \"\" || /Meow/.test(this.state.textInput)\n          ? `Meow ${catArray[chooseRandom]}`\n          : this.state.textInput;\n      };\n      this.setState((prev) => {\n        return {\n          ...prev,\n          textInput: text(prev),\n          fontType: this.state.fontFamily[randomFont],\n          rangeValue: randomSize,\n          textColor: randomcolor(),\n          outlineColor: randomcolor(),\n          backgroundColor: randomcolor(),\n          id: this.state.count,\n        };\n      });\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState((prev) => {\n      return {\n        ...prev,\n        count: prev.count + 1,\n        result: [\n          ...prev.result,\n          {\n            textInput: this.state.textInput,\n            fontType: this.state.fontType,\n            rangeValue: this.state.rangeValue,\n            textColor: this.state.textColor,\n            outlineColor: this.state.outlineColor,\n            backgroundColor: this.state.backgroundColor,\n            colorProperties: this.state.colorProperties,\n            id: this.state.count,\n          },\n        ],\n      };\n    });\n  };\n\n  handleClear = () => {\n    this.setState((prev) => {\n      return {\n        ...prev,\n        textInput: \"\",\n        fontType: \"Arial\",\n        rangeValue: 16,\n        textColor: \"black\",\n        outlineColor: \"#ffffff00\",\n        backgroundColor: \"#ffffff\",\n        colorProperties: \"textColor\",\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container border\">\n        <div className=\"container-left\">\n          <TextInput\n            input={this.state.textInput}\n            handleChange={this.handleChange}\n            handleClick={this.handleClear}\n          />\n          <Preview preview={this.state} />\n          <Result\n            result={this.state.result}\n            handleClick={this.handleClick}\n            handleSubmit={this.handleSubmit}\n          />\n        </div>\n        <div className=\"container-right\">\n          <Control\n            input={this.state}\n            handleChange={this.handleChange}\n            handleClick={this.handleClick}\n            handleSubmit={this.handleSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./sass/main.scss\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}